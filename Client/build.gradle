buildscript {
    ext {
        compileSdkVersion = 34
        minSdkVersion = 24
        targetSdkVersion = 30

        detekt_version = "1.22.0"
    }

    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.detekt apply false
    alias libs.plugins.firebase.crashlytics apply false
    alias libs.plugins.google.services apply false
    alias libs.plugins.hilt apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.parcelize apply false
    alias libs.plugins.kotlin.serialization apply false
    alias libs.plugins.ksp apply false
    alias libs.plugins.navigation.safeargs apply false
    alias libs.plugins.secrets apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://www.jitpack.io" }
    }
}

subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"
    dependencies {
        detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:${detekt_version}"
    }

    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                kotlinOptions.freeCompilerArgs += [
                        "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                        "-opt-in=androidx.paging.ExperimentalPagingApi",
                        "-Xjvm-default=all",
                        "-Xcontext-receivers"
                ]
            }
        }
    }

    detekt {
        // Version of Detekt that will be used. When unspecified the latest detekt
        // version found will be used. Override to stay on the same version.
        toolVersion = "$detekt_version"

        // If set to `true` the build does not fail when the
        // maxIssues count was reached. Defaults to `false`.
        ignoreFailures = false

        // Android: Don't create tasks for the specified build types (e.g. "release")
        ignoredBuildTypes = ["release"]

        // Specify the base path for file paths in the formatted reports.
        // If not set, all file paths reported will be absolute file path.
        basePath = projectDir

        autoCorrect = true
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}